<?php
/**
 * This file contains the Backup_Database class wich performs
 * a partial or complete backup of any given MySQL database
 * @author Daniel López Azaña <http://www.daniloaz.com>
 * @author Damian Kęska
 * @version 1.0
 */
 
/**
 * The Backup_Database class
 */
 
class Backup_Database {
    protected $host = '';
    protected $username = '';
    protected $passwd = '';
    protected $dbName = '';
    protected $charset = '';
    protected $conn = '';
    public $resultType = 'string';
    public $replacePrefix = False;
    public $dropTables = True;
 
    /**
      * Initialize connection
      *
      * @param string $host
      * @param string $username
      * @param string $passwd
      * @param string $dbName
      * @param string $charset
      * @return void 
      * @author Daniel López Azaña <http://www.daniloaz.com>
      */
     
    public function __construct($host, $username, $passwd, $dbName, $charset = 'utf8')
    {
        $this->host     = $host;
        $this->username = $username;
        $this->passwd   = $passwd;
        $this->dbName   = $dbName;
        $this->charset  = $charset;
        
        $this->conn = new PDO('mysql:host=' .$this->host. ';dbname=' .$this->dbName, $this->username, $this->passwd);
        $this->conn -> query('SET NAMES ' .$this->charset);
    }
    
    /**
     * Backup the whole database or just some tables
     * Use '*' for whole database or 'table1 table2 table3...'
     * @param string $tables
     * @return SQL Dump as string
     */
     
    public function backupTables($tables = '*', $backupData=True)
    {
        global $panthera;
    
            /**
            * Tables to export
            */
            if($tables == '*')
            {
                $tables = array();
                $result = $this->conn->query('SHOW TABLES');
                $result -> execute();
                foreach ($result->fetchAll() as $row)
                {
                    $tables[] = $row[0];
                }
                
            } else {
                $tables = is_array($tables) ? $tables : explode(',',$tables);
            }
            
            if (!isset($_SERVER["SERVER_NAME"]))
            {
                $_SERVER["SERVER_NAME"] = 'Unknown';
            }

            // header
            $sql = "-- DUMP Generated by Panthera Framework ".PANTHERA_VERSION."\n-- Server: ".$_SERVER["SERVER_NAME"]."\n\n";


            $sql .= "CREATE DATABASE IF NOT EXISTS ".$this->dbName.";\n\n";
            $sql .= 'USE '.$this->dbName.";\n\n";
            
            if ($this->resultType == "array")
                $result = array();
 
            /**
             * Iterate tables
             */
            
            foreach($tables as $table)
            {
                if ($this->resultType == "array")
                    $sql = "";
            
                #echo "Backing up ".$table." table...";
 
                if ($backupData == True)
                {
                    $result = $this->conn->query('SELECT * FROM '.$table);
                    $result -> execute();
                    $numFields = $result->columnCount();
                }
                
                $fixedTableName = $table;
                
                if ($this->replacePrefix == True)
                    $fixedTableName = str_replace($panthera->db->prefix, '{$db_prefix}', $table);
                
                
                if ($this->dropTables == True)
                    $sql .= 'DROP TABLE IF EXISTS `'.$fixedTableName.'`;';
                    
                $q = $this->conn->query('SHOW CREATE TABLE '.$table);
                $q -> execute();
                $row = $q -> fetch(PDO::FETCH_ASSOC);
                $sql.= "\n\n".str_replace('CREATE TABLE `' .$table. '`', 'CREATE TABLE `' .$fixedTableName. '`', $row['Create Table']).";\n\n";
 
                if ($backupData == True)
                {
                    for ($i = 0; $i < $numFields; $i++)
                    {
                        foreach ($result->fetchAll() as $row)
                        {
                            $sql .= 'INSERT INTO `'.$fixedTableName.'` VALUES(';
                            for($j=0; $j<$numFields; $j++)
                            {
                                $row[$j] = addslashes($row[$j]);
                                $row[$j] = str_replace("\n", "\\n", $row[$j]);
                                
                                if (isset($row[$j]))
                                {
                                    $sql .= '"'.$row[$j].'"' ;
                                }
                                else
                                {
                                    $sql.= '""';
                                }
     
                                if ($j < ($numFields-1))
                                {
                                    $sql .= ',';
                                }
                            }
     
                            $sql.= ");\n";
                        }
                    }
                }
                
                if ($this->resultType == "array")
                    $result[str_replace('{$db_prefix}', '', $fixedTableName)] = $sql;
 
                $sql.="\n\n\n";
 
                #echo " OK" . "<br />";
            }

        if ($this->resultType == "array")
            return $result;
        else
            return $sql;
    }
 
    
    /**
     * Save SQL to file
     * @param string $sql
     */

    /*
    protected function saveFile(&$sql, $outputDir = '.')
    {
        if (!$sql) return false;
 
        $handle = fopen($outputDir.'/db-backup-'.$this->dbName.'-'.date("Ymd-His", time()).'.sql','w+');
        fwrite($handle, $sql);
        fclose($handle);
 
        return true;
    }*/
}
