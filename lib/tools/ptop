#!/usr/bin/env php
<?php
set_time_limit(0); // never stop executing the script

//define('DEBUG', True);

// include lib
define('SITE_DIR', getcwd());

if(!is_file(SITE_DIR. '/content/config.php'))
    die("Please run this tool from the root directory of your website\n");

include(str_ireplace('/tools', '/', dirname(__FILE__)). '/boot.php');

error_reporting(E_ALL);

class ptop extends cliApp
{
    protected $sleepTime = 2;
    protected $_waitAfterHelp = True;

    public function __construct()
    {
        parent::__construct();
        $this->registerCommand('f', 'freeze', 'Freeze input');
        $this->clear(True);

        $this->panthera->importModule('crontab');
    }

    public function freeze($args='')
    {
        print("Output freezed, press [Enter] to continue...");
        $this->wait(9999);
    }

    protected function catchUserInput($input)
    {
        // call parent method
        parent::catchUserInput($input);
    }

    protected function main()
    {
        $this->clear();

        print($this->screen->picker->getColoredString("ptop ".PANTHERA_VERSION."\n\n", 'light_cyan'));

        // cleanup
        cronjobs::cleanRunSockets();

        // get all sockets
        $sockets = run::getSockets();

        // list to display in table
        $list = array();

        foreach ($sockets as $socket)
        {
            if ($socket->expired == 0)
                $executionTime = 'still executing';
            else
                $executionTime = round(($socket->expired-$socket->started)*100);

            // unpack data            
            $data = unserialize($socket->storage);

            $list[] = array('pid' => $socket->pid, 'user' => $data['user'], 'name' => $socket->name, 'execution time' => $executionTime. ' ms', 'triggered by' => $data['client'], 'url' => $data['url']);
        }

        if (count($list) == 0)
            $list[] = array('pid' => 'no', 'name' => 'active', 'execution time' => 'processes', 'triggered by' => 'working', 'url' => 'in background');

        $renderer = new ArrayToTextTable($list);
        $renderer->showHeaders(true);
        $renderer->render();

        $processes = 0;

        if ($list[0]['pid'] != 'no')
            $processes = count($list);

        print("\nTotal processes: ".$processes."\nPress [f] to freeze output.");

        print("\n");
    }
}

$app = new ptop();
$app -> run();

